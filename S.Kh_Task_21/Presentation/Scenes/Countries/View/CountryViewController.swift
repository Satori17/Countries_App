//
//  CountryViewController.swift
//  S.Kh_Task_21
//
//  Created by Saba Khitaridze on 11.08.22.
//  Copyright (c) 2022 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol CountryDisplayLogic: AnyObject {
    func displayCountry(viewModel: CountryModel.ViewModel)
}

class CountryViewController: UIViewController {
    
    //MARK: - IBOutlets
    @IBOutlet weak var countriesTableView: UITableView!
    
    //MARK: - Vars
    
    var interactor: CountryInteractorProtocol?
    var router: CountryRouterProtocol?
    //search controller
    let searchController = UISearchController()
    //data
    var allCountries: [CountryViewModel] = [] {
        didSet {
                self.countriesTableView.reloadData()
        }
    }
    //searching results data
    var filteredCountries = [CountryViewModel]()
    
    //MARK: - Object Lifecycle
    
    required init?(coder: NSCoder) {
        super.init(coder: coder)
        CountryConfigurator.configure(vc: self)
    }
    
    // MARK: View lifecycle
    
    override func viewDidLoad() {
        super.viewDidLoad()
        //registering Cell
        countriesTableView.registerNib(class: CountryCell.self)
        setupRequest()
        setupSearchBar()        
    }
    
    //MARK: - Methods
    
    private func setupRequest() {
        interactor?.getCountries()
    }
    
    private func setupSearchBar() {
        navigationItem.searchController = searchController
        searchController.searchResultsUpdater = self
        searchController.searchBar.delegate = self
        navigationItem.hidesSearchBarWhenScrolling = false
        searchController.searchBar.returnKeyType = UIReturnKeyType.search
        searchController.obscuresBackgroundDuringPresentation = false
        searchController.loadViewIfNeeded()
        searchController.searchBar.placeholder = "Search Country"
    }
    
}


extension CountryViewController: CountryDisplayLogic {
    
    func displayCountry(viewModel: CountryModel.ViewModel) {
        allCountries = viewModel.displayedCountries
    }
}


// ყველაზე მეტად მაინტერესებს VIP როგორ მაქვს გაგებული 😁
