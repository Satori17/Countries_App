//
//  CountryPresenter.swift
//  S.Kh_Task_21
//
//  Created by Saba Khitaridze on 11.08.22.
//  Copyright (c) 2022 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol CountryPresenterProtocol {
    func presentCountries(response: CountryModel.Response)
}

class CountryPresenter {
    weak var viewController: CountryDisplayLogic?
    
}


extension CountryPresenter: CountryPresenterProtocol {
    
    func presentCountries(response: CountryModel.Response) {
        var displayedCountries = [CountryViewModel]()
        
        response.countries.forEach { country in
            //guarding optional capital and currencies
            guard let capital = country.capital, let currencies = country.currencies else { return }
            
            //currencies
            var currencyArray = [CurrencyViewModel]()
            currencies.forEach({
                currencyArray.append(CurrencyViewModel(code: $0.code, name: $0.name, symbol: $0.symbol))
            })
            
            displayedCountries.append(CountryViewModel(name: country.name,
                                                       alphaCode: country.alpha3Code,
                                                       capital: capital,
                                                       region: country.region.rawValue,
                                                       pupulation: country.population,
                                                       flag: country.flag,
                                                       currencies: currencyArray))
        }
        
        let viewModel = CountryModel.ViewModel(displayedCountries: displayedCountries)
        viewController?.displayCountry(viewModel: viewModel)
    }
    
}
